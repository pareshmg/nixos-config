#compdef cmtaws
#autoload
local -a _1st_arguments
_1st_arguments=(
  'ec2:'
'ami:'
'info:'
'sqs:'
'kinesis:'
'ecr:'
'emr:'
'codeartifact:'

)

local expl

_arguments   '(-h)-h[elp]'   '*:: :->subcmds' && return 0

if (( CURRENT == 1 )); then
  _describe -t commands "cmtaws subcommand" _1st_arguments
  return
fi

case "$words[1]" in
  ec2)
  _arguments -s -S \
      "-h[show this help message and exit]:" \
      "--help[show this help message and exit]:" \
      "--region[aws region (default: us-east-1)]::REGION:_files" \
      "-r[aws region (default: us-east-1)]::REGION:_files" \
      "--exact[force exact match in filtering (default: False)]" \
      "-e[force exact match in filtering (default: False)]" \
      "--no-confirm[skip any user confirmation (default: False)]" \
      "-y[skip any user confirmation (default: False)]" \
      "--nocolor[turn off color display (default: False)]" \
      "--instanceid[instance id filter (default: None)]::INSTANCEID:_files" \
      "-i[instance id filter (default: None)]::INSTANCEID:_files" \
      "--name[name (in instance tag) filter (default: None)]::NAME:_files" \
      "-n[name (in instance tag) filter (default: None)]::NAME:_files" \
      "--group[security group filter (default: None)]::GROUP:_files" \
      "-g[security group filter (default: None)]::GROUP:_files" \
      "--state[instance state filter (default: None)]::STATE:_files" \
      "-s[instance state filter (default: None)]::STATE:_files" \
      "--type[instance type filter (default: None)]::TYPE:_files" \
      "-t[instance type filter (default: None)]::TYPE:_files" \
      "--tag[instance tag filter, --tag key=value (default: None)]::TAG:_files" \
      "-a[instance tag filter, --tag key=value (default: None)]::TAG:_files" \
      "--sortby[sort the output table by a column (default: None)]::SORTBY:_files" \
      "--detail[display details together for listing (default: False)]" \
      "--newname[name to use for a new image (image) or an instance (rename) (default: None)]::NEWNAME:_files" \
      "--gateway[gateway address for double-hop ssh, if the instance is not reachable by public dns. if the given gateway address is not full, '.cmtelematics.com' is automatically appended. (default: None)]::GATEWAY:_files" \
      "--remote-cmd[Remote command to execute via ssh (default: )]::REMOTE_CMD:_files" \
      "--port[ssh port. If None, rely on ssh configuration. (default: None)]::PORT:_files" \
      "-p[ssh port. If None, rely on ssh configuration. (default: None)]::PORT:_files" \
      "--user[ssh user. If None, rely on ssh configuration for ssh command, or use the default for putsshkey command. If specified for putsshkey, /home/<putsshkey_user>/.ssh will be the remote target directory. (default: None)]::USER:_files" \
      "-l[ssh user. If None, rely on ssh configuration for ssh command, or use the default for putsshkey command. If specified for putsshkey, /home/<putsshkey_user>/.ssh will be the remote target directory. (default: None)]::USER:_files" \
      "--pubkey[file containing your ssh public key (for putsshkey) (default: /Users/pareshmg/.ssh/cmt_id_rsa.pub)]::PUBKEY:_files" \
      "--scpsrc[scp source. use <> as a placeholder for the address of the target machine. (default: None)]::SCPSRC:_files" \
      "--scptgt[scp target. use <> as a placeholder for the address of the target machine. (default: None)]::SCPTGT:_files" \
      "--scppre[do this first before scp. use <> as a placeholder for the address of the target machine. (default: None)]::SCPPRE:_files" \
      "--scpmagic[Predefined sets of --scpsrc/tgt/pre and --port arguments (default: None)]::{dbwatcher}:(dbwatcher):" \
      "--sqlin[dbquery: file containing sql statement to execute remotely (default: None)]::SQLIN:_files" \
      "--dbuser[dbquery: db user (default: analytics)]::DBUSER:_files" \
      "--db[dbquery: db host to use on remote machine (default: prod-db-nightly.cmtelematics.com)]::DB:_files" \
      "--sqlout[dbquery: file that will contain results of sql query executed remotely for use; if not specified default to sqlin with the extension .out (default: None)]::SQLOUT:_files" \
      "--delimiter[dbquery: delimiter to use in db output. \" and ' are not allowed as delimiters (default: ,)]::DELIMITER:_files" \
      "--align[dbquery: align dbquery output (default: False)]" \
      "--tag-mac[triplogparse: mac address of tag (default: None)]::TAG_MAC:_files" \
      "--remote-cmt-home[triplogparse: remote directory containing vtrack that contains triplogparser.py (default: $CMT_HOME)]::REMOTE_CMT_HOME:_files" \
      "--triplogparse-output-dir[triplogparse: directory where output files will be placed (default: None)]::TRIPLOGPARSE_OUTPUT_DIR:_files" \
      "--triplogparse-release[triplogparse: directory where output files will be placed (default: None)]::TRIPLOGPARSE_RELEASE:_files" \
      "--triplogparse-skip-untar[triplogparse: skip untarring the triplogparser output (default: False)]::TRIPLOGPARSE_SKIP_UNTAR:_files" \
      "--newtags[TAGS ...\] tags to set with \`tag\` command, such as --newtags key1=value1 key2=value2 (default: None)]::NEWTAGS:_files" \
      "--override-domain[the top-level domain to use, overriding defaults. This should only need to be specified if domain inference is malfunctioning. (default: None)]::OVERRIDE_DOMAIN:_files" \
      "--override-gateway[the bastion to use, overriding defaults. This should only need to be specified if bastion inference is malfunctioning. (default: None)]::OVERRIDE_GATEWAY:_files" \
      "1: :(dbwatcher --help)" ;;  ami)
  _arguments -s -S \
      "-h[show this help message and exit]:" \
      "--help[show this help message and exit]:" \
      "--region[aws region (default: us-east-1)]::REGION:_files" \
      "-r[aws region (default: us-east-1)]::REGION:_files" \
      "--exact[force exact match in filtering (default: False)]" \
      "-e[force exact match in filtering (default: False)]" \
      "--no-confirm[skip any user confirmation (default: False)]" \
      "-y[skip any user confirmation (default: False)]" \
      "--nocolor[turn off color display (default: False)]" \
      "--name[name filter (default: None)]::NAME:_files" \
      "-n[name filter (default: None)]::NAME:_files" \
      "--amiid[ami id filter (default: None)]::AMIID:_files" \
      "-i[ami id filter (default: None)]::AMIID:_files" \
      "--description[description filter (default: None)]::DESCRIPTION:_files" \
      "-d[description filter (default: None)]::DESCRIPTION:_files" \
      "--state[instance state filter (default: None)]::STATE:_files" \
      "-s[instance state filter (default: None)]::STATE:_files" \
      "--sortby[sort the output table by a column (default: None)]::SORTBY:_files" \
      "--detail[display details together for listing (default: False)]" \
      "--lpreset[launch preset (default: None)]::LPRESET:_files" \
      "--ldryrun[launch dry-run (default: False)]" \
      "--lcount[number of instances to launch (default: None)]::LCOUNT:_files" \
      "--ltype[instance type for launch (default: None)]::LTYPE:_files" \
      "--lsubnet[subnet id for launch (default: None)]::LSUBNET:_files" \
      "--lsecgroup[list of security groups for launch (default: None)]::LSECGROUP:_files" \
      "--lprofile[iam profile to associate with launch (default: None)]::LPROFILE:_files" \
      "--lprice[spot bidding price, if not zero. use 'aws info spotprice' to figure out the current price. <guideline> around or slightly higher than $0.01/core (default: None)]::LPRICE:_files" \
      "--lzone[availability zone. e.g. 'a','b',.. (default: None)]::LZONE:_files" \
      "--lname[name of launched instances (default: None)]::LNAME:_files" \
      "--lrootsize[new size of the EBS root in GB (must be larger than the size of the source snapshot) (default: None)]::LROOTSIZE:_files" \
      "--lnewebs[attach a new ebs volume with size specified in GB. note that this volume is a raw block device without any filesystem initialized, and will be deleted on termination. (default: None)]::LNEWEBS:_files" \
      "--lkeyname[ec2 key pair name. use an empty string (\"\") to override any key name provided in the preset and not use any aws key (default: None)]::LKEYNAME:_files" \
      "--ltags[..\] tags to assign to launched instances. must be space- seperated key-value pairs, such as \`--ltags key1=value1 key2=value\` (default: None)]::LTAGS:_files" \
      "--luserdata_path[path to the user_data (default: None)]::LUSERDATA_PATH:_files" \
      "--dstregion[target region for copying AMI (default: None)]::DSTREGION:_files" \
      "--get-by-ami-id[image id to get, even if the image's owner is not self (default: None)]::GET_BY_AMI_ID:_files" \
      "1: :(list launch deregister copy --help)" ;;  info)
  _arguments -s -S \
      "-h[show this help message and exit]:" \
      "--help[show this help message and exit]:" \
      "--region[aws region (default: us-east-1)]::REGION:_files" \
      "-r[aws region (default: us-east-1)]::REGION:_files" \
      "--exact[force exact match in filtering (default: False)]" \
      "-e[force exact match in filtering (default: False)]" \
      "--no-confirm[skip any user confirmation (default: False)]" \
      "-y[skip any user confirmation (default: False)]" \
      "--nocolor[turn off color display (default: False)]" \
      "--type[instance type filter (default: c4.8xlarge)]::TYPE:_files" \
      "-t[instance type filter (default: c4.8xlarge)]::TYPE:_files" \
      "--sortby[sort the output table by a column (default: None)]::SORTBY:_files" \
      "--detail[display details together for listing (default: False)]" \
      "1: :(spotprice vpc secgroup preset all --help)" ;;  sqs)
  _arguments -s -S \
      "-h[show this help message and exit]:" \
      "--help[show this help message and exit]:" \
      "--region[aws region (default: us-east-1)]::REGION:_files" \
      "-r[aws region (default: us-east-1)]::REGION:_files" \
      "--exact[force exact match in filtering (default: False)]" \
      "-e[force exact match in filtering (default: False)]" \
      "--no-confirm[skip any user confirmation (default: False)]" \
      "-y[skip any user confirmation (default: False)]" \
      "--nocolor[turn off color display (default: False)]" \
      "--name[name filter (default: None)]::NAME:_files" \
      "-n[name filter (default: None)]::NAME:_files" \
      "--sortby[sort the output table by a column (default: None)]::SORTBY:_files" \
      "--detail[display details together for listing (default: False)]" \
      "1: :(list purge --help)" ;;  kinesis)
  _arguments -s -S \
      "-h[show this help message and exit]:" \
      "--help[show this help message and exit]:" \
      "--region[aws region (default: us-east-1)]::REGION:_files" \
      "-r[aws region (default: us-east-1)]::REGION:_files" \
      "--exact[force exact match in filtering (default: False)]" \
      "-e[force exact match in filtering (default: False)]" \
      "--no-confirm[skip any user confirmation (default: False)]" \
      "-y[skip any user confirmation (default: False)]" \
      "--nocolor[turn off color display (default: False)]" \
      "--name[name filter (default: None)]::NAME:_files" \
      "-n[name filter (default: None)]::NAME:_files" \
      "--sortby[sort the output table by a column (default: None)]::SORTBY:_files" \
      "--detail[display details together for listing (default: False)]" \
      "--newname[New Kinesis stream name (default: None)]::NEWNAME:_files" \
      "--num-shard[Number of shards (default: None)]::NUM_SHARD:_files" \
      "1: :(list create delete --help)" ;;  ecr)
  _arguments -s -S \
      "-h[show this help message and exit]:" \
      "--help[show this help message and exit]:" \
      "--region[aws region (default: us-east-1)]::REGION:_files" \
      "-r[aws region (default: us-east-1)]::REGION:_files" \
      "--exact[force exact match in filtering (default: False)]" \
      "-e[force exact match in filtering (default: False)]" \
      "--no-confirm[skip any user confirmation (default: False)]" \
      "-y[skip any user confirmation (default: False)]" \
      "--nocolor[turn off color display (default: False)]" \
      "--account-id[ECR account ID (default: 062438643287)]::ACCOUNT_ID:_files" \
      "1: :(login pull --help)" ;;  emr)
  _arguments -s -S \
      "-h[show this help message and exit]:" \
      "--help[show this help message and exit]:" \
      "--region[aws region (default: us-east-1)]::REGION:_files" \
      "-r[aws region (default: us-east-1)]::REGION:_files" \
      "--exact[force exact match in filtering (default: False)]" \
      "-e[force exact match in filtering (default: False)]" \
      "--no-confirm[skip any user confirmation (default: False)]" \
      "-y[skip any user confirmation (default: False)]" \
      "--nocolor[turn off color display (default: False)]" \
      "--name[name filter (default: None)]::NAME:_files" \
      "-n[name filter (default: None)]::NAME:_files" \
      "--clusterid[cluster id filter (default: None)]::CLUSTERID:_files" \
      "-i[cluster id filter (default: None)]::CLUSTERID:_files" \
      "--state[cluster state filter (default: None)]::STATE:_files" \
      "-s[cluster state filter (default: None)]::STATE:_files" \
      "--cluster-name[cluster name to create (default: None)]::CLUSTER_NAME:_files" \
      "--instance-type[cluster instance type (default: c5.xlarge)]::INSTANCE_TYPE:_files" \
      "--master-instance-type[master instance type (default: m5.2xlarge)]::MASTER_INSTANCE_TYPE:_files" \
      "--core-count[core node instance count. need at least 1. (default: 1)]::CORE_COUNT:_files" \
      "--task-count[task node instance count. the total instance count of core and task nodes should be at least 2. (default: 1)]::TASK_COUNT:_files" \
      "--zero-spot[do not use spot instances even for task instances. master and core node will always be on-demand. (default: False)]" \
      "--task-disk[Default disk (in GB) per machine. Default = 32GB * physical core count (default: None)]::TASK_DISK:_files" \
      "--addn-bootstrap[list of additional bootstrap files (default: \[\])]::ADDN_BOOTSTRAP:_files" \
      "--auto-terminate[set cluster auto termination. (default: False)]" \
      "--log-dst[fetch log destination. a subdirectory named after the cluster id will be created. (default: /tmp/emr/aws- logs/)]::LOG_DST:_files" \
      "--remote-cmd[remote command to run (default: None)]::REMOTE_CMD:_files" \
      "--instance-detail[show instance details for list-instances command (default: False)]" \
      "1: :( --help)" ;;  codeartifact)
  _arguments -s -S \
      "-h[show this help message and exit]:" \
      "--help[show this help message and exit]:" \
      "--region[aws region (default: us-east-1)]::REGION:_files" \
      "-r[aws region (default: us-east-1)]::REGION:_files" \
      "--exact[force exact match in filtering (default: False)]" \
      "-e[force exact match in filtering (default: False)]" \
      "--no-confirm[skip any user confirmation (default: False)]" \
      "-y[skip any user confirmation (default: False)]" \
      "--nocolor[turn off color display (default: False)]" \
      "--domain-owner[The CodeArtifact domain to log in to (default: 797462016303)]::DOMAIN_OWNER:_files" \
      "--dry-run" \
      "--repository-name[the PyPI repository name (default: codeartifact)]::REPOSITORY_NAME:_files" \
      "--poetry-read-name[the name of the repository to tell Poetry to read from (default: codeartifact)]::POETRY_READ_NAME:_files" \
      "--poetry-write-name[the name of the repository to tell Poetry to write to (default: codeartifactwrite)]::POETRY_WRITE_NAME:_files" \
      "--read-repository[the CodeArtifact repository to read from (default: python-read)]::READ_REPOSITORY:_files" \
      "--write-repository[the CodeArtifact repository to write to (default: python-write)]::WRITE_REPOSITORY:_files" \
      "--pip-config-file[the location of the pip configuration file (default: /Users/pareshmg/.config/pip/pip.conf)]::PIP_CONFIG_FILE:_files" \
      "--pypirc-config-file[the location of the PyPI configuration file (default: /Users/pareshmg/.pypirc)]::PYPIRC_CONFIG_FILE:_files" \
      "1: :(pip twine read write --help)" ;;
esac
