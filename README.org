#+title: Paresh's NixOS & Nix-Darwin System Configuration Flake
#+description: My flakes setup
#+author: Paresh Malalur




* Installation Guide


#+begin_src bash
nix --extra-experimental-features 'nix-command flakes' run --no-write-lock-file "github:pareshmg/nixos-config#bootstrap"
#+end_src


You can optionally pass to the above the argument ~-- ${FLAKE}~ which will boostrap the specified flake. Please select a flake from [[*Flakes][Flakes]]



** Additional Details
There are *3* main steps:


1. Create your secrets & customize flake
2. Run ~setup~: Install nix + dependencies
3. Build and install flake

*** Creating secrets
An example setup of secrets is available in the ~secrets_example/~ directory. This repo uses ~secrets~ as a flake. Rather than editing the example directory, it is recommended that you copy it to ~$HOME/.nix-secrets~

1. ~cp -r secrets_example ~/.nix-secrets~
2. ~cd ~/.nix-secrets~
3. ~git init && git add .~
4. Update ~flake.nix~ to have your information

When running, please override the ~secrets~ flake with the one above. Note that the ~bin/buid~ scripts already do this.


*** Install nix + dependencies

TL;DR : Run ~bin/setup~

- For NixOS: you're already set!
- For all other OS
  - run ~bin/setup~. This will
    - Install [[https://nixos.org/download][Nix package manager]]
- For MacOS only
  - run ~bin/setup~. This will
    - Install [[https://nixos.org/download][Nix package manager]]
    - Install [[https://brew.sh/][homebrew]]


*** Build and install flake

1. Checkout this repo to ~$HOME/nixos-config~
2. Edit your ~flake.nix~ to set the profiles as you have defined in your secrets
3. In this directory, run the appropriate build as defined in ~flake.nix~


This flake currently has *4* host types
 1. linux / NixOS ~nix run .#$FLAKE~
 2. linux / Other ~nix run .#$USER~
 3. darwin / MacOS ~nix run .#$FLAKE~
 4. linux / NixOS KVM export ~bin/vm-build $FLAKE~

In addition, this build allows you to host one base machine and remote build from
there. The main use case here is building on a work machine where you may not want to
copy over your personal git keys. For this, on your base machine, run

#+begin_src bash
bin/remote-build $FLAKE $TARGET_HOST
#+end_src

*** Additional config

**** Using secrets
If you are going to use agenix secrets, add to your ~$HOME/.nix-secrets/flake.nix~ identity paths under the corresponding profiles to the ssh key path you want

 #+begin_src nix :comments yes
{
  profile.per.identityPaths = [
  "/home/${user}/.ssh/id_ed25519"
  "/Users/${user}/.ssh/id_ed25519"
  "/Users/${user}/.ssh/age_id_ed25519"
  ];
}
 #+end_src

In addition, you can add secrets to the flake that can be accessed externally

In your secrets ~flake.nix~ you can have
 #+begin_src nix :comments yes
{
  mysecrets.secret1 = ./secret1.age
}
 #+end_src

And this can be accessed in your nixos-config as ~secrets.mysecrets.secret1~




* System Structure
Compontents relevant to all hosts:
| *Shell*   | Zsh        |
| *Editors* | Doom Emacs |
| *Tools*   | tmux, jq   |
| *Secrets* | agenix     |

For headless machines:


For desktop machines:
| *Password Manager* | KeePass variant |
|                    |                 |


For home-manager only machines:
- Packages are installed in user space only
- use flake as defined in your secrets as ~secrets.profile.per.user~


** Flakes

| *FLAKE* | *OS*   | *DESKTOP* | *ARCH*  | *Comments*                   |
|---------+--------+-----------+---------+------------------------------|
| pmp     | darwin | Y         | x86-64  | 2020 macbook pro - main      |
| pmpcmt  | darwin | Y         | aarch64 | 2023 macbook pro - work      |
| vm      | NixOS  | N         | x86-64  | headless VM with GPU         |
| $user   | N/A    | N         | x86-64  | Home-manager only            |
| ubuntu  | N/A    | N         | x86-64  | Home-manager only - work     |
| testvm  | NixOS  | Y         | x86-64  | VM export for Proxmox w/ KDE |
| minimal | NixOS  | N         | x86-64  | VM export for Proxmox        |
|         |        |           |         |                              |


* Credits / Sources of inspiration

[[https://github.com/matthiasbenaets/nixos-config][Matthiasâ€™ NixOS & Nix-Darwin System Configuration Flake]]

[[https://github.com/dustinlyons/nixos-config#2-optional-setup-secrets][dustinlyons]]
